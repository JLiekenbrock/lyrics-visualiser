{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My Docs 1. git 1: git 2. UML 3. Event-Storming/DDD 4. Metrics I used Sonarcloud , which is sonarqube in the cloud, as i wanted the whole project to be cloud based. It also gives you the ability to embed lot's of different badges: 5. Clean Code My Top 10 Clean Code Principals KISS it keep it DRY Demeter SRP IOSP ISP SoC Naming Conventions DUP TDD 6. Build Management + 8. Continuous Delivery The build management and continuos delivery are also completely cloud based. I used Travis for the build management and continuos delivery because all the services i use integrate extremely well with it. My Travis Pipeline: travis.yml Build Management The Travis Pipeline runs the unit tests by calling pytest and is also connected to sonarcloud. When the tests succeed this documentation is generated using the python libraries mkdocs and pdocs3. Continuos Delivery When the build is successful e.g. sonarqube and pytest are happy the documentation is regenerated and published to github pages. There is technical documentation generated based on the source code as well as what you are reading right now . Documentation Code 7. Unit-Tests The Unit tests are written with the help of the python library pytest. 9. IDE 10. DSL 11. Functional Programming","title":"My Docs"},{"location":"#my-docs","text":"","title":"My Docs"},{"location":"#1-git","text":"1: git","title":"1. git"},{"location":"#2-uml","text":"","title":"2. UML"},{"location":"#3-event-stormingddd","text":"","title":"3. Event-Storming/DDD"},{"location":"#4-metrics","text":"I used Sonarcloud , which is sonarqube in the cloud, as i wanted the whole project to be cloud based. It also gives you the ability to embed lot's of different badges:","title":"4. Metrics"},{"location":"#5-clean-code","text":"My Top 10 Clean Code Principals KISS it keep it DRY Demeter SRP IOSP ISP SoC Naming Conventions DUP TDD","title":"5. Clean Code"},{"location":"#6-build-management-8-continuous-delivery","text":"The build management and continuos delivery are also completely cloud based. I used Travis for the build management and continuos delivery because all the services i use integrate extremely well with it. My Travis Pipeline: travis.yml","title":"6. Build Management + 8. Continuous Delivery"},{"location":"#build-management","text":"The Travis Pipeline runs the unit tests by calling pytest and is also connected to sonarcloud. When the tests succeed this documentation is generated using the python libraries mkdocs and pdocs3.","title":"Build Management"},{"location":"#continuos-delivery","text":"When the build is successful e.g. sonarqube and pytest are happy the documentation is regenerated and published to github pages. There is technical documentation generated based on the source code as well as what you are reading right now . Documentation Code","title":"Continuos Delivery"},{"location":"#7-unit-tests","text":"The Unit tests are written with the help of the python library pytest.","title":"7. Unit-Tests"},{"location":"#9-ide","text":"","title":"9. IDE"},{"location":"#10-dsl","text":"","title":"10. DSL"},{"location":"#11-functional-programming","text":"","title":"11. Functional Programming"}]}